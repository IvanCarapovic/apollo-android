name: Android CI - Unit Tests

on:
  push: # Trigger on every push to any branch
  #    branches-ignore: # Optional: Ignore pushes to specific branches if needed
  #      - 'main' # Example: if you only want to run this on feature branches
  #      - 'develop'
  pull_request: # Also trigger on pull requests targeting any branch
    branches:
      - '**'

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest # Use a Linux runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Action to check out your repository

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17' # Specify the JDK version your project uses
          distribution: 'temurin' # Adoptium Temurin is a good choice
          cache: 'gradle' # Cache Gradle dependencies for faster builds

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run unit tests
        # Replace ':app:testDebugUnitTest' with the correct Gradle task for your unit tests
        # If your unit tests are in a different module, adjust the path (e.g., :feature:testDebugUnitTest)
        run: ./gradlew :app:testDebugUnitTest # Assuming your app module is named 'app'

      # Optional: Upload test results
      # This step is useful if you want to view test reports in GitHub Actions
      - name: Upload Test Results
        if: always() # Run this step even if previous steps fail
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: | # Specify paths to your test result files
            **/build/reports/tests/testDebugUnitTest/
            **/build/test-results/testDebugUnitTest/